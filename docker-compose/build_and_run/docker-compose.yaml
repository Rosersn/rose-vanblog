# 定义自定义网络
networks:
  vanblog-network:
    driver: bridge

services:
  vanblog:
    build:
      context: ../../
      dockerfile: Dockerfile
      args:
        VAN_BLOG_BUILD_SERVER: 'http://127.0.0.1:3000'
        VAN_BLOG_VERSIONS: 'v1.0.0'
        http_proxy: 'http://192.168.3.2:10828'
        https_proxy: 'http://192.168.3.2:10828'
      network: host
    restart: always
    environment:
      TZ: 'Asia/Shanghai'
      # 邮箱地址，用于通知
      EMAIL: 'your-email@example.com'
      # 设置为生产环境
      NODE_ENV: 'production'
      # 设置版本号
      VAN_BLOG_VERSION: 'v1.0.0'
    volumes:
      # 图床文件的存放地址，按需修改
      - ${PWD}/data/static:/app/static
      # 日志文件
      - ${PWD}/log:/var/log
      # Caddy 配置存储
      - ${PWD}/caddy/config:/root/.config/caddy
      # Caddy 证书存储
      - ${PWD}/caddy/data:/root/.local/share/caddy
      # 阿里云盘配置存储
      - ${PWD}/aliyunpan/config:/root/.config/aliyunpan
    # 移除端口映射，因为现在通过caddy-proxy访问
    networks:
      - vanblog-network
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  caddy-proxy:
    image: caddy:latest
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ${PWD}/caddy-proxy/Caddyfile:/etc/caddy/Caddyfile
      - ${PWD}/caddy-proxy/data:/data
      - ${PWD}/caddy-proxy/config:/config
    networks:
      - vanblog-network
    environment:
      TZ: 'Asia/Shanghai'
    depends_on:
      - vanblog

  mongo:
    # 某些机器不支持AVX指令集会报错，所以可选择使用v4版本
    # image: mongo:4.4.16
    image: mongo:latest
    restart: always
    environment:
      TZ: 'Asia/Shanghai'
      # 可选：设置MongoDB认证（生产环境推荐）
      # MONGO_INITDB_ROOT_USERNAME: admin
      # MONGO_INITDB_ROOT_PASSWORD: your-strong-password
    volumes:
      - ${PWD}/data/mongo:/data/db
    networks:
      - vanblog-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3